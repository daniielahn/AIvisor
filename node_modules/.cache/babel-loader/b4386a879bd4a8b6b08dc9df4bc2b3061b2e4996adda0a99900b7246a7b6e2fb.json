{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Documents/SCI/sci-app/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css'; // Import the external CSS file\n\nimport Message from './Message'; // Import the Message component\n\n// inside your Chat component's return statement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n    message: message\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this));\n}\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const sendMessage = () => {\n    if (userInput.trim() !== '') {\n      const newUserMessage = {\n        sender: 'You',\n        text: userInput\n      };\n      setMessages(prevMessages => [...prevMessages, newUserMessage]);\n      fetch('http://localhost:5000/ask_openai', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: userInput\n        })\n      }).then(response => response.json()).then(data => {\n        const newBotMessage = {\n          sender: 'PantherAI',\n          text: data.answer\n        };\n        setMessages(prevMessages => [...prevMessages, newBotMessage]);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      setUserInput('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'You' ? 'user-message' : 'bot-message'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: message.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyPress: handleKeyPress // Listen for keypress event\n        ,\n        className: \"input-box\",\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"a9NavnWICb4yaDxbWN1at5FwvBg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Message","jsxDEV","_jsxDEV","messages","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","Chat","_s","setMessages","userInput","setUserInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","newUserMessage","sender","text","prevMessages","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","newBotMessage","answer","catch","error","console","handleKeyPress","e","key","className","children","ref","type","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/danny/Documents/SCI/sci-app/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css'; // Import the external CSS file\n\n\nimport Message from './Message'; // Import the Message component\n\n// inside your Chat component's return statement\n{messages.map((message, index) => (\n  <Message key={index} message={message} />\n))}\n\nconst Chat = () => {\n\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const sendMessage = () => {\n    if (userInput.trim() !== '') {\n      const newUserMessage = { sender: 'You', text: userInput };\n      setMessages((prevMessages) => [...prevMessages, newUserMessage]);\n\n      fetch('http://localhost:5000/ask_openai', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query: userInput }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          const newBotMessage = { sender: 'PantherAI', text: data.answer };\n          setMessages((prevMessages) => [...prevMessages, newBotMessage]);\n        })\n        .catch((error) => {\n          console.error('Error:', error);\n        });\n\n      setUserInput('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender === 'You' ? 'user-message' : 'bot-message'}`}>\n            <div className=\"message-bubble\">\n              <p>{message.text}</p>\n              <span className=\"message-sender\">{message.sender}</span>\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          onKeyPress={handleKeyPress} // Listen for keypress event\n          className=\"input-box\"\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage} className=\"send-button\">\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}